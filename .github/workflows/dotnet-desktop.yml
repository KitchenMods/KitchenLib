name: Build KitchenLib for Workshop

on:
  push:
    branches: [ "development" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Workshop]

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
         
    - name: Setup DepotDownloader
      run: |
         wget https://github.com/SteamRE/DepotDownloader/releases/download/DepotDownloader_2.5.0/DepotDownloader-linux-x64.zip
         unzip DepotDownloader-linux-x64.zip
         chmod +x DepotDownloader
        
    - name: Generate auth code
      id: generate
      uses: CyberAndrii/steam-totp@c7f636bc64e77f1b901e0420b7890813141508ee
      with:
        shared_secret: ${{ secrets.STEAM_SHARED_SECRET }}
        
    - name: Download PlateUp Files
      run: |
          ./DepotDownloader -app 1599600 -depot 1599601 -username ${{ secrets.STEAM_USERNAME }} -password ${{ secrets.STEAM_PASSWORD }} <<< "${{ steps.generate.outputs.code }}"
         
     # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
         6.x
         
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    #- name: Setup MSBuild.exe
    #  uses: microsoft/setup-msbuild@v1.0.2
      
    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    # - name: Build the application
    #   run: |
    #     $id = ls -Directory -Name $PWD/depots/1599601/
    #     ls $PWD/depots/1599601/$id/PlateUp
    #     msbuild $env:Solution_Name -r /p:Configuration=$env:Configuration /p:EnableModDeployLocal='true' /p:GamePath=$PWD/depots/1599601/$id/PlateUp
    #   env:
    #     Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: |
        dotnet --list-sdks
        ls -d $PWD/depots/1599601/**
        dotnet build -c $Configuration -p:GamePath=`ls -d $PWD/depots/1599601/**`/PlateUp -p:EnableModDeployLocal='true'
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Print Directory Contents
      run: ls ./KitchenLib/content/

    # Upload the build artifacts for later use
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Workshop Build
        path: KitchenLib/content/
        if-no-files-found: error
